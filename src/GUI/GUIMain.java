/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.CoilTypeManager;
import BLL.MaterialManager;
import BLL.ProductionOrderManager;
import BLL.SimilarOrderManager;
import BLL.SimilarSleeveManager;
import BLL.SleeveManager;
import BLL.StockManager;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.UIManager;

/**
 *
 * @author MikeZJ
 */
public class GUIMain extends javax.swing.JFrame
{

    private ProductionOrderManager po;
    private SleeveManager slm;
    private MaterialManager mm;
    private StockManager sm;
    private CoilTypeManager ctm;
    private SimilarOrderManager som;
    private SimilarSleeveManager ssm;
    private OrderTableModel OrderModel;
    private SleeveTableModel SleeveModel;
    private StockTableModel StockModel;
    private CoilTypeTableModel CoilTypeModel;
    private SimilarOrderTableModel SimilarOrderModel;
    private SimilarSleeveTableModel SimilarSleeveModel;
    private int SleeveID;
    private int MaterialID;
    private int CoilTypeID;
    private double CoilTypeWidth;
    private double SimilarWidth;
    private int Counter;

    /**
     * Creates new form OrderList
     */
    public GUIMain()
    {

        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        try
        {
            po = new ProductionOrderManager();
            slm = new SleeveManager();
            mm = new MaterialManager();
            sm = new StockManager();
            ctm = new CoilTypeManager();
            som = new SimilarOrderManager();
            ssm = new SimilarSleeveManager();

            Counter = 0;
            OrderModel = new OrderTableModel(po.showAll());
            tblShowOrders.setModel(OrderModel);
            tblShowOrder.setModel(OrderModel);
            tblUpdateShowOrder.setModel(OrderModel);
            tblRemoveShowOrder.setModel(OrderModel);


            Initialize();
            SleeveListener();
            StockListener();
            CoilListener();
            UrgentOrder();
            SimilarOrdersListener();
            SimilarSleeveListener();


        } catch (Exception ex)
        {
//            JOptionPane.showMessageDialog(this, "EROOR - Can't open GUI", "Error 1", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane9 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panOrderInfo = new javax.swing.JPanel();
        panBorderInfo = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblSleeveInfo = new javax.swing.JTable();
        panBorderMat = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStockList = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblShowOrders = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSimilarOrders = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblCoilInfo = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblSimilarSleeves = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        cbxEmp = new javax.swing.JComboBox();
        panAddOrder = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblShowOrder = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        panBorderAdd = new javax.swing.JPanel();
        txtDueDate = new javax.swing.JTextField();
        txtCircumference = new javax.swing.JTextField();
        txtThickness = new javax.swing.JTextField();
        txtWidth = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        lblQuantity = new javax.swing.JLabel();
        lblWidth = new javax.swing.JLabel();
        lblThickness = new javax.swing.JLabel();
        lblCircumference = new javax.swing.JLabel();
        lblDueDate = new javax.swing.JLabel();
        lblAddOrderList = new javax.swing.JLabel();
        panUpdateOrder = new javax.swing.JPanel();
        btnUpdate = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblUpdateShowOrder = new javax.swing.JTable();
        btnUpdateClear = new javax.swing.JButton();
        panBorderUpdate = new javax.swing.JPanel();
        lblUpdateDueDate = new javax.swing.JLabel();
        txtUpdateDueDate = new javax.swing.JTextField();
        lblUpdateCircumference = new javax.swing.JLabel();
        txtUpdateCircumference = new javax.swing.JTextField();
        txtUpdateThickness = new javax.swing.JTextField();
        txtUpdateWidth = new javax.swing.JTextField();
        txtUpdateQuantity = new javax.swing.JTextField();
        txtUpdateID = new javax.swing.JTextField();
        lblUpdateThickness = new javax.swing.JLabel();
        lblIDOrder = new javax.swing.JLabel();
        lblUpdateQuantity = new javax.swing.JLabel();
        lblUpdateWidth = new javax.swing.JLabel();
        lblUpdaterOrderList = new javax.swing.JLabel();
        panRemoveOrder = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblRemoveShowOrder = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lblRemoveOrder = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane9.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        panBorderInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sleeve Information:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jScrollPane7.setViewportView(tblSleeveInfo);

        javax.swing.GroupLayout panBorderInfoLayout = new javax.swing.GroupLayout(panBorderInfo);
        panBorderInfo.setLayout(panBorderInfoLayout);
        panBorderInfoLayout.setHorizontalGroup(
            panBorderInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBorderInfoLayout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        panBorderInfoLayout.setVerticalGroup(
            panBorderInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panBorderInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );

        panBorderMat.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stock Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jScrollPane2.setViewportView(tblStockList);

        javax.swing.GroupLayout panBorderMatLayout = new javax.swing.GroupLayout(panBorderMat);
        panBorderMat.setLayout(panBorderMatLayout);
        panBorderMatLayout.setHorizontalGroup(
            panBorderMatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBorderMatLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        panBorderMatLayout.setVerticalGroup(
            panBorderMatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBorderMatLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Order:"));

        jScrollPane1.setViewportView(tblShowOrders);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Similar Orders:"));

        jScrollPane3.setViewportView(tblSimilarOrders);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Coil Information"), "Coil Information"));

        jScrollPane8.setViewportView(tblCoilInfo);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Similar Sleeves:"));

        jScrollPane10.setViewportView(tblSimilarSleeves);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Order Registration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12), java.awt.Color.black)); // NOI18N

        btnStart.setText("Start");

        btnStop.setText("Stop");

        cbxEmp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStop)
                .addContainerGap(139, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbxEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbxEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(btnStop))
                .addContainerGap())
        );

        javax.swing.GroupLayout panOrderInfoLayout = new javax.swing.GroupLayout(panOrderInfo);
        panOrderInfo.setLayout(panOrderInfoLayout);
        panOrderInfoLayout.setHorizontalGroup(
            panOrderInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panOrderInfoLayout.createSequentialGroup()
                .addGroup(panOrderInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panOrderInfoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panOrderInfoLayout.createSequentialGroup()
                        .addGroup(panOrderInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panBorderMat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panBorderInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(panOrderInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panOrderInfoLayout.setVerticalGroup(
            panOrderInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panOrderInfoLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(panOrderInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panOrderInfoLayout.createSequentialGroup()
                        .addComponent(panBorderInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panBorderMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panOrderInfoLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 343, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Select Order", panOrderInfo);

        jScrollPane4.setViewportView(tblShowOrder);

        btnAdd.setText("Add Order");

        btnClear.setText("Clear All");

        panBorderAdd.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Order", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        lblQuantity.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblQuantity.setText("Quantity:");

        lblWidth.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblWidth.setText("Width:");

        lblThickness.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblThickness.setText("Thickness:");

        lblCircumference.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCircumference.setText("Circumference:");

        lblDueDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDueDate.setText("Due Date:");

        javax.swing.GroupLayout panBorderAddLayout = new javax.swing.GroupLayout(panBorderAdd);
        panBorderAdd.setLayout(panBorderAddLayout);
        panBorderAddLayout.setHorizontalGroup(
            panBorderAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBorderAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panBorderAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCircumference)
                    .addComponent(lblDueDate)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panBorderAddLayout.createSequentialGroup()
                        .addGroup(panBorderAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQuantity)
                            .addComponent(lblWidth)
                            .addComponent(lblThickness))
                        .addGap(25, 25, 25)))
                .addGap(8, 8, 8)
                .addGroup(panBorderAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCircumference, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(txtDueDate)
                    .addComponent(txtWidth)
                    .addComponent(txtQuantity)
                    .addComponent(txtThickness)))
        );
        panBorderAddLayout.setVerticalGroup(
            panBorderAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBorderAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panBorderAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantity)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(panBorderAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWidth)
                    .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panBorderAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThickness)
                    .addComponent(txtThickness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(panBorderAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCircumference)
                    .addComponent(txtCircumference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panBorderAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDueDate)
                    .addComponent(txtDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        lblAddOrderList.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblAddOrderList.setText("Orders:");

        javax.swing.GroupLayout panAddOrderLayout = new javax.swing.GroupLayout(panAddOrder);
        panAddOrder.setLayout(panAddOrderLayout);
        panAddOrderLayout.setHorizontalGroup(
            panAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAddOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                    .addGroup(panAddOrderLayout.createSequentialGroup()
                        .addGroup(panAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panAddOrderLayout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addGap(18, 18, 18)
                                .addComponent(btnClear))
                            .addComponent(panBorderAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddOrderList))
                        .addGap(0, 455, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panAddOrderLayout.setVerticalGroup(
            panAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAddOrderLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(panBorderAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 573, Short.MAX_VALUE)
                .addComponent(lblAddOrderList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panAddOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnClear))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add Order", panAddOrder);

        btnUpdate.setText("Add Order");

        jScrollPane5.setViewportView(tblUpdateShowOrder);

        btnUpdateClear.setText("Clear All");

        panBorderUpdate.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Update Order", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        lblUpdateDueDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblUpdateDueDate.setText("Due Date:");

        lblUpdateCircumference.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblUpdateCircumference.setText("Circumference:");

        txtUpdateID.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtUpdateIDActionPerformed(evt);
            }
        });

        lblUpdateThickness.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblUpdateThickness.setText("Thickness:");

        lblIDOrder.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblIDOrder.setText("ID of Order:");

        lblUpdateQuantity.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblUpdateQuantity.setText("Quantity:");

        lblUpdateWidth.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblUpdateWidth.setText("Width:");

        javax.swing.GroupLayout panBorderUpdateLayout = new javax.swing.GroupLayout(panBorderUpdate);
        panBorderUpdate.setLayout(panBorderUpdateLayout);
        panBorderUpdateLayout.setHorizontalGroup(
            panBorderUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panBorderUpdateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panBorderUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUpdateDueDate)
                    .addComponent(lblUpdateCircumference)
                    .addComponent(lblUpdateThickness)
                    .addComponent(lblUpdateWidth)
                    .addComponent(lblUpdateQuantity)
                    .addComponent(lblIDOrder))
                .addGap(14, 14, 14)
                .addGroup(panBorderUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUpdateDueDate, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                    .addComponent(txtUpdateThickness)
                    .addComponent(txtUpdateWidth)
                    .addComponent(txtUpdateQuantity)
                    .addComponent(txtUpdateID)
                    .addComponent(txtUpdateCircumference))
                .addContainerGap())
        );
        panBorderUpdateLayout.setVerticalGroup(
            panBorderUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBorderUpdateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panBorderUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUpdateID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIDOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panBorderUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUpdateQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUpdateQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panBorderUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUpdateWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUpdateWidth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panBorderUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUpdateThickness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUpdateThickness))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panBorderUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUpdateCircumference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUpdateCircumference))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panBorderUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUpdateDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUpdateDueDate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblUpdaterOrderList.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblUpdaterOrderList.setText("Orders:");

        javax.swing.GroupLayout panUpdateOrderLayout = new javax.swing.GroupLayout(panUpdateOrder);
        panUpdateOrder.setLayout(panUpdateOrderLayout);
        panUpdateOrderLayout.setHorizontalGroup(
            panUpdateOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panUpdateOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panUpdateOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                    .addGroup(panUpdateOrderLayout.createSequentialGroup()
                        .addGroup(panUpdateOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panUpdateOrderLayout.createSequentialGroup()
                                .addComponent(btnUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdateClear))
                            .addComponent(lblUpdaterOrderList)
                            .addComponent(panBorderUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 471, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panUpdateOrderLayout.setVerticalGroup(
            panUpdateOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panUpdateOrderLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(panBorderUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 549, Short.MAX_VALUE)
                .addComponent(lblUpdaterOrderList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panUpdateOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnUpdateClear))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Update Order", panUpdateOrder);

        jScrollPane6.setViewportView(tblRemoveShowOrder);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("ID of Order:");

        jButton1.setText("Remove Order");

        jButton2.setText("Clear All");

        lblRemoveOrder.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblRemoveOrder.setText("Orders:");

        javax.swing.GroupLayout panRemoveOrderLayout = new javax.swing.GroupLayout(panRemoveOrder);
        panRemoveOrder.setLayout(panRemoveOrderLayout);
        panRemoveOrderLayout.setHorizontalGroup(
            panRemoveOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panRemoveOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panRemoveOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                    .addGroup(panRemoveOrderLayout.createSequentialGroup()
                        .addGroup(panRemoveOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panRemoveOrderLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panRemoveOrderLayout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addComponent(lblRemoveOrder))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panRemoveOrderLayout.setVerticalGroup(
            panRemoveOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panRemoveOrderLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(panRemoveOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 733, Short.MAX_VALUE)
                .addComponent(lblRemoveOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panRemoveOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Remove Order", panRemoveOrder);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1080, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUpdateIDActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtUpdateIDActionPerformed
    {//GEN-HEADEREND:event_txtUpdateIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpdateIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(GUIMain.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(GUIMain.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(GUIMain.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(GUIMain.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {

                new GUIMain().setVisible(true);

            }
        });
    }
    // <editor-fold defaultstate="collapsed" desc="Netbeans declarations">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateClear;
    private javax.swing.JComboBox cbxEmp;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblAddOrderList;
    private javax.swing.JLabel lblCircumference;
    private javax.swing.JLabel lblDueDate;
    private javax.swing.JLabel lblIDOrder;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblRemoveOrder;
    private javax.swing.JLabel lblThickness;
    private javax.swing.JLabel lblUpdateCircumference;
    private javax.swing.JLabel lblUpdateDueDate;
    private javax.swing.JLabel lblUpdateQuantity;
    private javax.swing.JLabel lblUpdateThickness;
    private javax.swing.JLabel lblUpdateWidth;
    private javax.swing.JLabel lblUpdaterOrderList;
    private javax.swing.JLabel lblWidth;
    private javax.swing.JPanel panAddOrder;
    private javax.swing.JPanel panBorderAdd;
    private javax.swing.JPanel panBorderInfo;
    private javax.swing.JPanel panBorderMat;
    private javax.swing.JPanel panBorderUpdate;
    private javax.swing.JPanel panOrderInfo;
    private javax.swing.JPanel panRemoveOrder;
    private javax.swing.JPanel panUpdateOrder;
    private javax.swing.JTable tblCoilInfo;
    private javax.swing.JTable tblRemoveShowOrder;
    private javax.swing.JTable tblShowOrder;
    private javax.swing.JTable tblShowOrders;
    private javax.swing.JTable tblSimilarOrders;
    private javax.swing.JTable tblSimilarSleeves;
    private javax.swing.JTable tblSleeveInfo;
    private javax.swing.JTable tblStockList;
    private javax.swing.JTable tblUpdateShowOrder;
    private javax.swing.JTextField txtCircumference;
    private javax.swing.JTextField txtDueDate;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtThickness;
    private javax.swing.JTextField txtUpdateCircumference;
    private javax.swing.JTextField txtUpdateDueDate;
    private javax.swing.JTextField txtUpdateID;
    private javax.swing.JTextField txtUpdateQuantity;
    private javax.swing.JTextField txtUpdateThickness;
    private javax.swing.JTextField txtUpdateWidth;
    private javax.swing.JTextField txtWidth;
    // End of variables declaration//GEN-END:variables
    // </editor-fold>

    private void SleeveListener()
    {
        tblShowOrders.addMouseListener(new MouseAdapter()
        {
            @Override
            public void mouseClicked(final MouseEvent e)
            {
                if (e.getClickCount() >= 1)
                {
                    Counter++;
                    System.out.println("Mouse clicked: " + Counter );
                    final JTable OrderModel = (JTable) e.getSource();
                    final int row = OrderModel.getSelectedRow();
//                        final int column = OrderModel.getSelectedColumn();

                    SleeveID = (int) OrderModel.getValueAt(row, 5);
                    CoilTypeWidth = (double) OrderModel.getValueAt(row, 4);
                    Initialize();
                }
            }
        });

    }

    private void StockListener()
    {       
        tblCoilInfo.addMouseListener(new MouseAdapter()
        {
            @Override
            public void mouseClicked(final MouseEvent e)
            {
                if (e.getClickCount() == 1)
                {
                    final JTable CoilModel = (JTable) e.getSource();
                    final int row = CoilModel.getSelectedRow();
//                        final int column = OrderModel.getSelectedColumn();

                    CoilTypeID = (int) CoilModel.getValueAt(row, 0);
                    try
                    {
                        StockModel = new StockTableModel(sm.getBySleeveId(CoilTypeID));
                    } catch (Exception ex)
                    {
                        Logger.getLogger(GUIMain.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    tblStockList.setModel(StockModel);
                    System.out.println("Valgte StockItem:" + CoilTypeID);
                }
            }
        });
    }

    private void CoilListener()
    {
        tblSleeveInfo.addMouseListener(new MouseAdapter()
        {
            @Override
            public void mouseClicked(final MouseEvent e)
            {
                if (e.getClickCount() == 1)
                {
                    final JTable SleeveModel = (JTable) e.getSource();
                    final int row = SleeveModel.getSelectedRow();

//                        final int column = OrderModel.getSelectedColumn();

                    MaterialID = (int) SleeveModel.getValueAt(row, 3);

                    try
                    {

                        CoilTypeModel = new CoilTypeTableModel(ctm.getByCoilTypeID(MaterialID, CoilTypeWidth));

                    } catch (Exception ex)
                    {
                        Logger.getLogger(GUIMain.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    tblCoilInfo.setModel(CoilTypeModel);
                    System.out.println("Valgte CoilTypeID: " + MaterialID);
                    System.out.println("Valgte Width: " + CoilTypeWidth);
                }
            }
        });
    }

    private void SimilarOrdersListener()
    {
        tblCoilInfo.addMouseListener(new MouseAdapter()
        {
            @Override
            public void mouseClicked(final MouseEvent e)
            {
                if (e.getClickCount() == 1)
                {
                    final JTable SleeveModel = (JTable) e.getSource();
                    final int row = SleeveModel.getSelectedRow();

//                        final int column = OrderModel.getSelectedColumn();

                    SimilarWidth = (double) SleeveModel.getValueAt(row, 2);

                    try
                    {

                        SimilarOrderModel = new SimilarOrderTableModel(som.getSimilarOrders(SimilarWidth));

                    } catch (Exception ex)
                    {
                        Logger.getLogger(GUIMain.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    tblSimilarOrders.setModel(SimilarOrderModel);
                    //        tblSimilarOrders.setModel(SimilarOrderModel);
                    System.out.println("Valgte Width: " + SimilarWidth);
                }
            }
        });
    }

    private void UrgentOrder()
    {
        int count = (tblShowOrders.getRowCount());
        NumberFormat formatter = new DecimalFormat("###,###");
        String no = formatter.format(count);
        txtDueDate.setText(no);

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Calendar cal = Calendar.getInstance();
        String expDateString = sdf.format(cal.getTime()).toString();

        for (int i = 0; i <= tblShowOrders.getRowCount() - 1; i++)
        {
            ColorRender cr = new ColorRender(tblShowOrders.getColumnName(0));
            for (int j = 0; j < 6; j++)
            {
                tblShowOrders.getColumnModel().getColumn(j).setCellRenderer(cr);
            }




//                System.out.println("Hvad er due date " + dueDate);
//                System.out.println("Hvad er exp date " + expDateString);
//                System.out.println("Hvor meget er res " + res);


        }
    }
    
    
      private void SimilarSleeveListener()
    {
        tblSimilarOrders.addMouseListener(new MouseAdapter()
        {
            @Override
            public void mouseClicked(final MouseEvent e)
            {
                if (e.getClickCount() == 1)
                {
                    final JTable SimilarOrderModel = (JTable) e.getSource();
                    final int row = SimilarOrderModel.getSelectedRow();
//                        final int column = OrderModel.getSelectedColumn();

                    SleeveID = (int) SimilarOrderModel.getValueAt(row, 5);
                    try
                    {
                        SimilarSleeveModel = new SimilarSleeveTableModel(ssm.getNewSimilarSleeve(SleeveID));
                    } catch (Exception ex)
                    {
                        Logger.getLogger(GUIMain.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    tblSimilarSleeves.setModel(SimilarSleeveModel);
                    System.out.println("Valgte StockItem:" + CoilTypeID);
                }
            }
        });
    }


    private void Initialize()
    {
        try
        {
            SimilarOrderModel = new SimilarOrderTableModel(som.getSimilarOrders(0.0));
            StockModel = new StockTableModel(sm.getBySleeveId(0));
            CoilTypeModel = new CoilTypeTableModel(ctm.getByCoilTypeID(0, 0.0));
            SleeveModel = new SleeveTableModel(slm.getBySleeveId(SleeveID));
            SimilarSleeveModel = new SimilarSleeveTableModel(ssm.getNewSimilarSleeve(0));

        } catch (Exception ex)
        {
            Logger.getLogger(GUIMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        tblStockList.setModel(StockModel);
        tblSimilarOrders.setModel(SimilarOrderModel);
        tblCoilInfo.setModel(CoilTypeModel);
        tblSleeveInfo.setModel(SleeveModel);
        tblSimilarSleeves.setModel(SimilarSleeveModel);
        //   throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    
    
}
